@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    string? orientationReminder;
    if (ViewData["NextOrientationDate"] != null)
    {
        orientationReminder = "The next orientation is scheduled on " + ViewData["NextOrientationDate"].ToString();
    } else
    {
        orientationReminder = "No orientation is currently on the schedule.";
    }

    var posts = from CommunityIssue in Model.CommunityIssues orderby CommunityIssue.CreatedDate descending select CommunityIssue;
    var recentPosts = posts.Take(3);
    var recentEvents = (from communityEvent in Model.Events orderby communityEvent.Date select communityEvent).Take(10);
    var mostRecentPoll = (from Poll in Model.Polls orderby Poll.DateCreated descending select Poll).First();
    var residentId = User.Claims.Single(user => user.Type == "residentId").Value;
    var hasVoted = from PollVote in Model.Votes where PollVote.ResidentId.ToString() == residentId select PollVote;
    var questionnaire = Model.Questionnaires.OrderByDescending(q => q.CreatedAt).FirstOrDefault();
    var hasSubmittedQuestionnaire = questionnaire.Questions.Find(q => q.Responses.Find(r => r.ResidentId.ToString() == residentId) != null);
    bool isEmployee = false;
    if (residentId == "-1") isEmployee = true;
    //var hasFilledQuestionnaire = from response in questionnaire.Questions where 
}

<div class="row justify-content-center">
    <div class="col-12">
        <div class="alert alert-warning text-center">
            @orientationReminder
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <div class="card">
            <div class="card-header">
                Balance Due
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Deposit:</li>
                <li class="list-group-item">Lease:</li>
                <li class="list-group-item">Utilities:</li>
                <li class="list-group-item">Total:</li>
            </ul>

            <div class="card-footer d-flex justify-content-center">
                @{
                    if (isEmployee)
                    {
                        <button class="btn btn-primary" disabled>Unavailable to Staff</button>
                    } else {
                        <button class="btn btn-primary">Pay Bill</button>
                    }
                }
                
            </div>

        </div>
    </div>
    <div class="col-md-6">
        <div class="text-center">
            <h2>Events</h2>
        </div>
        <div class="accordion" id="accordion">
        @foreach(var r in recentEvents)
        {
                Resident? residentRegistered = new Resident();
                if (r.Residents != null)
                {
                    residentRegistered = (from res in r.Residents where res.Id == int.Parse(residentId) select res).FirstOrDefault();
                }
                
                
                <div class="accordion-item">
                <h2 class="accordion-header" id="@("Heading" + r.Id)">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@("Accordion" + r.Id)" aria-expanded="false" aria-controls="@("Accordion" + r.Id)">
                        @(r.Title + " " + r.Date)
                    </button>
                </h2>
                <div id="@("Accordion" + r.Id)" class="accordion-collapse collapse" aria-labelledby="@("Heading" + r.Id)" data-bs-parent="#accordion">
                    <div class="accordion-body">
                        <b>Description:</b>
                        @r.Description
                        <br>
                            @{
                                if (!isEmployee)
                                {
                                    if (residentRegistered == null)
                                    {
                                        <a asp-controller="Home" asp-action="EventSignup" asp-route-residentId="@residentId" asp-route-eventId="@r.Id" class="btn-primary btn">Register for Event</a>
                                    }
                                    

                                }else
                                {
                                    <button class="btn-primary btn" disabled>Unavailable to Staff</button>
                                }
                            }
                        
                    </div>
                </div>
            </div>
        }
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <form asp-action="Poll">
            <div class="card-header">
                Community Poll
            </div>
            <div class="card-body">
                <p>@mostRecentPoll.Question</p>
                    @{
                        
                        <div class="form-check">
                                <input type="hidden" name="Id" asp-for="@mostRecentPoll.Id">
                                <input type="hidden" name="residentId" value="@residentId">
                                <input class="form-check-input" type="radio" name="vote" id="Answer1" value="@mostRecentPoll.Answer">
                                <label class="form-check-label" for="Answer1">
                                @mostRecentPoll.Answer
                                </label>
                            </div>
                        <div class="form-check">
                                <input class="form-check-input" type="radio" name="vote" id="Answer2" value="@mostRecentPoll.Answer2">
                                <label class="form-check-label" for="Answer2">
                                @mostRecentPoll.Answer2
                                </label>
                            </div>
                        if (mostRecentPoll.Answer3 != null)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="vote" id="Answer3" value="@mostRecentPoll.Answer3">
                                <label class="form-check-label" for="Answer3">
                                @mostRecentPoll.Answer3
                                </label>
                            </div>
                        }
                        if (mostRecentPoll.Answer4 != null)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="vote" id="Answer4" value="@mostRecentPoll.Answer4">
                                <label class="form-check-label" for="Answer4">
                                @mostRecentPoll.Answer4
                                </label>
                            </div>
                        }
                    }
            </div>
            <div class="card-footer justify-content-center d-flex justify-content-center">
                @{
                    if (residentId != "-1" && hasVoted == null) {
                            <button type="submit" class="btn btn-primary">Submit Vote</button>
                        } else {
                            var buttonMessage = "Unavailable for Staff";
                            //if user is a resident and already voted then disable the button
                            if (hasVoted != null) {
                                buttonMessage = "Already Voted";
                            }
                        <button type="submit" class="btn btn-primary" disabled>@buttonMessage</button>
                        }
                }
            </div>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="text-center">
                <h2>Community Issues</h2>
            </div>
            <div class="card-group">
                @foreach (var post in recentPosts)
                {
                    <div class="card">
                        <div class="p-2">
                            <i class="fa-solid fa-arrow-up"></i>
                            <i class="fa-solid fa-arrow-down"><span class="ps-2">@((int)(post.UpVotes - post.DownVotes))</span></i>
                        </div>
                        
                        <div class="card-body">
                            <a asp-controller="CommunityIssues" asp-action="Details" asp-route-id="@post.Id"><h5 class="card-title">@Html.DisplayFor(modelItem => post.Title)</h5></a>
                            <p class="card-text">@post.Description.Substring(0,24)...</p>
                        </div>
                        <div class="card-footer">
                            <small class="text-muted">Last updated @Html.DisplayFor(modelItem => post.CreatedDate)</small>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    @{
        if(questionnaire != null)
        {
        <div class="row mt-3">
            <div class="col-12">
                <h2 class="text-center">Current Questionnaire</h2>
            </div>
            <div class="col-12 bg-light">
                
                <h4 class="text-center">@questionnaire.Title</h4>
                <form asp-action="AnswerQuestionnaire" id="qForm">
                    <input hidden name="questionnaireId" value="@questionnaire.Id"/>
                    <input hidden name="questionTotal" id="questionTotal" type="text" value="////"/>
                    <input hidden name="questionIdTotal" id="questionIdTotal" type="text" value="////"/>
                    @{
                        int count = 0;
                        foreach(var q in questionnaire.Questions)
                        {
                            <input type="hidden" name="questionId" value="@q.Id"/>
                            <div class="form-group">
                                <label class="control-label">Question @(count): @q.Text</label>
                                <input class="form-control" name="question" value="" type="text" required/>
                            </div>
                            count++;
                        }
                        if (isEmployee){
                                <button type="button" class="btn-primary btn" onclick="concatenateQuestions()" disabled>Unavailable to Staff</button>
                            } else {
                                if (hasSubmittedQuestionnaire != null)
                                {
                                    <button type="submit" class="btn-primary btn" onclick="concatenateQuestions()" disabled>Already Submitted</button>
                                } else
                                {
                                    <button type="submit" class="btn-primary btn" onclick="concatenateQuestions()">Submit Answers</button>
                                }
                                
                        }
                    }
                </form>
            </div>

        </div>
        
        }
    }
</div>
<script>
    function concatenateQuestions(){
        
        var listOfQuestions = document.getElementsByName("question");
        var listOfId = document.getElementsByName("questionId");
        var questionTotal = document.getElementById("questionTotal");
        var questionIdTotal = document.getElementById("questionIdTotal");
        var runningTotal = "";
        var runningTotalId = "";
        for (j = 0; j < listOfQuestions.length; j++)
        {
            runningTotal += "////" + listOfQuestions[j].value;
            runningTotalId += "////" + listOfId[j].value;
        }
        //console.log(runningTotal);
        questionTotal.setAttribute("value", runningTotal);
        questionIdTotal.setAttribute("value", runningTotalId);
    }
</script>